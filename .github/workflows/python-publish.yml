name: CI

on:
  push:
    branches:
      - main
      - stable/*
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v6.1.2

  version:
    needs:
      - commitlint

    runs-on: ubuntu-latest
    environment: release
    concurrency: release
    permissions:
      id-token: write
      attestations: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Release
        uses: python-semantic-release/python-semantic-release@v9.12.2
        id: release
        if: ${{ github.ref_name == 'main' || startsWith(github.ref_name, 'stable/') }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs:
      - version

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.0'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Build executable
      run: pyinstaller --onefile --console mypythonlib/haversine/main.py

    # Debugging step: List contents of the current directory
    - name: List contents of the current directory
      run: |
        echo "Listing files in the current directory:"
        ls -alh

      # Debugging step: List contents of the dist directory
    - name: List contents of the dist directory
      run: |
        echo "Listing files in the dist directory:"
        ls -alh dist

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Haversine
        path: dist/main

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.0'    

    - name: Get version from setup.py
      id: version
      run: |
        VERSION=$(python -c "
        with open('setup.py') as f:
            content = f.read()
        exec(content)
        print(__version__)
        ")
        echo "VERSION=${VERSION}" >> $GITHUB_ENV

    - name: Create Git tag
      run: |
        git tag -a v${{ env.VERSION }} -m "Release version ${{ env.VERSION }}"
        git push origin v${{ env.VERSION }}

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: Haversine

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: Haversine
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}